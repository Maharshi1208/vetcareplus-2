{
  "info": {
    "name": "VetCare+ AUTH QA",
    "_postman_id": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
    "description": "Register/Login tests for VetCare+ API (unique email each run)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [{ "key": "baseUrl", "value": "http://localhost:4000" }],
  "item": [
    {
      "name": "Register — Valid (unique)",
      "event": [
        { "listen": "prerequest", "script": { "type": "text/javascript", "exec": [
          "const ts = Date.now();",
          "pm.variables.set('regEmail', `user+${ts}@example.com`);",
          "pm.variables.set('regPass', 'Passw0rd!');"
        ]}},
        { "listen": "test", "script": { "type": "text/javascript", "exec": [
          "pm.test('201/200', () => pm.expect([201,200]).to.include(pm.response.code));",
          "// backend may return {id,...} or {user:{id,...}}; accept either",
          "const j = pm.response.json();",
          "pm.test('Has user id', () => pm.expect((j && (j.id || (j.user && j.user.id)))).to.exist);"
        ]}}
      ],
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\"email\":\"{{regEmail}}\",\"password\":\"{{regPass}}\"}" },
        "url": "{{baseUrl}}/auth/register"
      }
    },
    {
      "name": "Register — Duplicate (same email)",
      "event": [{ "listen": "test", "script": { "type": "text/javascript", "exec": [
        "pm.test('409/400 duplicate', () => pm.expect([409,400]).to.include(pm.response.code));"
      ]}}],
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\"email\":\"{{regEmail}}\",\"password\":\"{{regPass}}\"}" },
        "url": "{{baseUrl}}/auth/register"
      }
    },
    {
      "name": "Login — Valid (newly registered user)",
      "event": [{ "listen": "test", "script": { "type": "text/javascript", "exec": [
        "pm.test('200 OK', () => pm.expect(pm.response.code).to.eql(200));",
        "const j = pm.response.json();",
        "// accept either tokens.access or token",
        "const token = (j.tokens && j.tokens.access) || j.token;",
        "pm.collectionVariables.set('accessToken', token);",
        "pm.test('token present', () => pm.expect(pm.collectionVariables.get('accessToken')).to.exist);"
      ]}}],
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\"email\":\"{{regEmail}}\",\"password\":\"{{regPass}}\"}" },
        "url": "{{baseUrl}}/auth/login"
      }
    },
    {
      "name": "Login — Wrong Password",
      "event": [{ "listen": "test", "script": { "type": "text/javascript", "exec": [
        "pm.test('401 expected', () => pm.expect(pm.response.code).to.eql(401));"
      ]}}],
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\"email\":\"{{regEmail}}\",\"password\":\"WrongPass!\"}" },
        "url": "{{baseUrl}}/auth/login"
      }
    }
  ]
}
