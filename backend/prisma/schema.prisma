generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OWNER
  VET
  ADMIN
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  passwordHash String
  role         Role     @default(OWNER)
  suspended    Boolean  @default(false)

  // relations
  pets         Pet[]

  // audit
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Pet {
  id        String   @id @default(cuid())
  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  name      String
  species   String?
  breed     String?
  dob       DateTime?
  archived  Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
}

model Vet {
  id           String  @id @default(cuid())
  name         String
  email        String? @unique
  phone        String?
  specialty    String?
  bio          String?
  active       Boolean @default(true)

  availabilities VetAvailability[]

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VetAvailability {
  id           String  @id @default(cuid())
  vetId        String
  vet          Vet     @relation(fields: [vetId], references: [id], onDelete: Cascade)

  // 0 = Sunday ... 6 = Saturday
  weekday      Int

  // minutes from midnight local time (0..1440)
  startMinutes Int
  endMinutes   Int

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([vetId, weekday])
}
