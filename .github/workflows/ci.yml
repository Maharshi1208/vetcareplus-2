name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TZ: UTC
      NODE_ENV: test
      CORS_ORIGIN: http://localhost:5173
      JWT_SECRET: ci_test_secret_please_change
      # IMPORTANT: Prisma will read this for BOTH migrations + tests
      DATABASE_URL: postgresql://vc_user:vc_pass@localhost:5432/vetcare_test?schema=public

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: vc_user
          POSTGRES_PASSWORD: vc_pass
          POSTGRES_DB: vetcare_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U vc_user -d vetcare_test"
          --health-interval=5s --health-timeout=5s --health-retries=30

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install deps
        working-directory: backend
        run: npm ci

      - name: Show versions
        working-directory: backend
        run: |
          node -v
          npm -v
          npx prisma -v

      # Even after the service is "healthy", give Postgres a couple seconds
      - name: Extra DB wait
        run: sleep 3

      # OPTION A (clean slate each run): reset + generate + seed
      # If you prefer NOT to drop/recreate DB, comment this block and use OPTION B below.
      - name: Reset DB (drop/recreate)
        working-directory: backend
        run: npx prisma migrate reset --force --skip-seed --schema=prisma/schema.prisma

      - name: Generate Prisma Client
        working-directory: backend
        run: npx prisma generate --schema=prisma/schema.prisma

      - name: Seed (admin user etc.)
        working-directory: backend
        env:
          # prisma/seed.ts will read DATABASE_URL from job env
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npx prisma db seed --schema=prisma/schema.prisma

      # OPTION B (idempotent): If you do NOT want reset, use these two steps instead of the three above:
      # - name: Deploy migrations
      #   working-directory: backend
      #   run: npx prisma migrate deploy --schema=prisma/schema.prisma
      #
      # - name: Generate Prisma Client
      #   working-directory: backend
      #   run: npx prisma generate --schema=prisma/schema.prisma
      #
      # - name: Seed (admin user etc.)
      #   working-directory: backend
      #   run: npx prisma db seed --schema=prisma/schema.prisma

      - name: Unit tests
        working-directory: backend
        run: npm run test:unit -- --ci --reporters=default

      - name: Integration tests
        working-directory: backend
        # runInBand prevents flakiness with DB; detectOpenHandles helps surface leaks
        run: npm run test:int -- --ci --runInBand --detectOpenHandles --coverage --reporters=default

      - name: Upload coverage (ignore if missing)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend
          path: backend/coverage
          if-no-files-found: ignore
