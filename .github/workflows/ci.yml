name: Backend CI
on:
  push:
    paths: ["backend/**", ".github/workflows/**"]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vetcare
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/vetcare?schema=public
      PRISMA_SCHEMA_PATH: backend/prisma/schema.prisma
      BASE_URL: http://localhost:4000/api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json
      - name: Install deps
        working-directory: backend
        run: npm ci
      - name: Generate Prisma client
        working-directory: backend
        run: npx prisma generate --schema $PRISMA_SCHEMA_PATH
      - name: Reset & migrate DB
        working-directory: backend
        run: |
          npx prisma migrate deploy --schema $PRISMA_SCHEMA_PATH || true
          npx prisma migrate reset --force --skip-generate --schema $PRISMA_SCHEMA_PATH
      - name: Seed (optional)
        working-directory: backend
        run: |
          if npm run -s | grep -q "^  seed$"; then npm run seed || true; fi
      - name: Run tests
        working-directory: backend
        run: npm test --silent
      - name: Debug on failure
        if: failure()
        working-directory: backend
        run: |
          echo "=== prisma -v ==="; npx prisma -v || true
          echo "=== migrations ==="; [ -d prisma/migrations ] && ls -la prisma/migrations || true
